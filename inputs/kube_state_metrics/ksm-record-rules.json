[
  {
    "name": "cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits",
    "note": "",
    "disabled": 0,
    "prom_ql": "kube_pod_container_resource_limits{resource=\"cpu\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\ngroup_left() max by (namespace, pod, cluster) (\n (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n )",
    "prom_eval_interval": 15,
    "append_tags": []
  },
  {
    "name": "cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests",
    "note": "",
    "disabled": 0,
    "prom_ql": "kube_pod_container_resource_requests{resource=\"cpu\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\ngroup_left() max by (namespace, pod, cluster) (\n  (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n)",
    "prom_eval_interval": 15,
    "append_tags": []
  },
  {
    "name": "cluster:namespace:pod_memory:active:kube_pod_container_resource_limits",
    "note": "",
    "disabled": 0,
    "prom_ql": "kube_pod_container_resource_limits{resource=\"memory\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\ngroup_left() max by (namespace, pod, cluster) (\n  (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n)",
    "prom_eval_interval": 15,
    "append_tags": []
  },
  {
    "name": "cluster:namespace:pod_memory:active:kube_pod_container_resource_requests",
    "note": "",
    "disabled": 0,
    "prom_ql": "kube_pod_container_resource_requests{resource=\"memory\",job=\"kube-state-metrics\"}  * on (namespace, pod, cluster)\ngroup_left() max by (namespace, pod, cluster) (\n  (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)\n)",
    "prom_eval_interval": 15,
    "append_tags": []
  },
  {
    "name": "namespace_cpu:kube_pod_container_resource_limits:sum",
    "note": "",
    "disabled": 0,
    "prom_ql": "sum by (namespace, cluster) (\n    sum by (namespace, pod, cluster) (\n        max by (namespace, pod, container, cluster) (\n          kube_pod_container_resource_limits{resource=\"cpu\",job=\"kube-state-metrics\"}\n        ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (\n          kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n        )\n    )\n)",
    "prom_eval_interval": 15,
    "append_tags": []
  },
  {
    "name": "namespace_cpu:kube_pod_container_resource_requests:sum",
    "note": "",
    "disabled": 0,
    "prom_ql": "sum by (namespace, cluster) (\n    sum by (namespace, pod, cluster) (\n        max by (namespace, pod, container, cluster) (\n          kube_pod_container_resource_requests{resource=\"cpu\",job=\"kube-state-metrics\"}\n        ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (\n          kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n        )\n    )\n)",
    "prom_eval_interval": 15,
    "append_tags": []
  },
  {
    "name": "namespace_memory:kube_pod_container_resource_limits:sum",
    "note": "",
    "disabled": 0,
    "prom_ql": "sum by (namespace, cluster) (\n    sum by (namespace, pod, cluster) (\n        max by (namespace, pod, container, cluster) (\n          kube_pod_container_resource_limits{resource=\"memory\",job=\"kube-state-metrics\"}\n        ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (\n          kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n        )\n    )\n)",
    "prom_eval_interval": 15,
    "append_tags": []
  },
  {
    "name": "namespace_memory:kube_pod_container_resource_requests:sum",
    "note": "",
    "disabled": 0,
    "prom_ql": "sum by (namespace, cluster) (\n    sum by (namespace, pod, cluster) (\n        max by (namespace, pod, container, cluster) (\n          kube_pod_container_resource_requests{resource=\"memory\",job=\"kube-state-metrics\"}\n        ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (\n          kube_pod_status_phase{phase=~\"Pending|Running\"} == 1\n        )\n    )\n)",
    "prom_eval_interval": 15,
    "append_tags": []
  },
  {
    "name": "namespace_workload_pod:kube_pod_owner:relabel",
    "note": "",
    "disabled": 0,
    "prom_ql": "max by (cluster, namespace, workload, pod) (\n  label_replace(\n    kube_pod_owner{job=\"kube-state-metrics\", owner_kind=\"Job\"},\n    \"workload\", \"$1\", \"owner_name\", \"(.*)\"\n  )\n)",
    "prom_eval_interval": 15,
    "append_tags": [
      "workload_type=job"
    ]
  },
  {
    "name": "namespace_workload_pod:kube_pod_owner:relabel",
    "note": "",
    "disabled": 0,
    "prom_ql": "max by (cluster, namespace, workload, pod) (\n  label_replace(\n    kube_pod_owner{job=\"kube-state-metrics\", owner_kind=\"StatefulSet\"},\n    \"workload\", \"$1\", \"owner_name\", \"(.*)\"\n  )\n)",
    "prom_eval_interval": 15,
    "append_tags": [
      "workload_type=statefulset"
    ]
  },
  {
    "name": "namespace_workload_pod:kube_pod_owner:relabel",
    "note": "",
    "disabled": 0,
    "prom_ql": "max by (cluster, namespace, workload, pod) (\n  label_replace(\n    kube_pod_owner{job=\"kube-state-metrics\", owner_kind=\"DaemonSet\"},\n    \"workload\", \"$1\", \"owner_name\", \"(.*)\"\n  )\n)",
    "prom_eval_interval": 15,
    "append_tags": [
      "workload_type=daemonset"
    ]
  },
  {
    "name": "namespace_workload_pod:kube_pod_owner:relabel",
    "note": "",
    "disabled": 0,
    "prom_ql": "max by (cluster, namespace, workload, pod) (\n  label_replace(\n    label_replace(\n      kube_pod_owner{job=\"kube-state-metrics\", owner_kind=\"ReplicaSet\"},\n      \"replicaset\", \"$1\", \"owner_name\", \"(.*)\"\n    ) * on(replicaset, namespace) group_left(owner_name) topk by(replicaset, namespace) (\n      1, max by (replicaset, namespace, owner_name) (\n        kube_replicaset_owner{job=\"kube-state-metrics\"}\n      )\n    ),\n    \"workload\", \"$1\", \"owner_name\", \"(.*)\"\n  )\n)",
    "prom_eval_interval": 15,
    "append_tags": [
      "workload_type=deployment"
    ]
  },
  {
    "name": "node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate",
    "note": "",
    "disabled": 0,
    "prom_ql": "sum by (cluster, namespace, pod, container) (\n  irate(container_cpu_usage_seconds_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}[5m])\n) * on (cluster, namespace, pod) group_left(node) topk by (cluster, namespace, pod) (\n  1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=\"\"})\n)",
    "prom_eval_interval": 15,
    "append_tags": []
  },
  {
    "name": "node_namespace_pod_container:container_memory_cache",
    "note": "",
    "disabled": 0,
    "prom_ql": "container_memory_cache{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n* on (namespace, pod) group_left(node) topk by(namespace, pod) (1,\n  max by(namespace, pod, node) (kube_pod_info{node!=\"\"})\n)",
    "prom_eval_interval": 15,
    "append_tags": []
  },
  {
    "name": "node_namespace_pod_container:container_memory_rss",
    "note": "",
    "disabled": 0,
    "prom_ql": "container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n* on (namespace, pod) group_left(node) topk by(namespace, pod) (1,\n  max by(namespace, pod, node) (kube_pod_info{node!=\"\"})\n)",
    "prom_eval_interval": 15,
    "append_tags": []
  },
  {
    "name": "node_namespace_pod_container:container_memory_swap",
    "note": "",
    "disabled": 0,
    "prom_ql": "container_memory_swap{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n* on (namespace, pod) group_left(node) topk by(namespace, pod) (1,\n  max by(namespace, pod, node) (kube_pod_info{node!=\"\"})\n)",
    "prom_eval_interval": 15,
    "append_tags": []
  },
  {
    "name": "node_namespace_pod_container:container_memory_working_set_bytes",
    "note": "",
    "disabled": 0,
    "prom_ql": "container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", image!=\"\"}\n* on (namespace, pod) group_left(node) topk by(namespace, pod) (1,\n  max by(namespace, pod, node) (kube_pod_info{node!=\"\"})\n)",
    "prom_eval_interval": 15,
    "append_tags": []
  }
]